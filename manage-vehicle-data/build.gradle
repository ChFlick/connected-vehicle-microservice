plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
    id 'org.jetbrains.kotlin.plugin.allopen' version '1.3.41'
    id 'io.quarkus'
    id 'com.adarshr.test-logger' version '2.0.0'
}

repositories {
     mavenLocal()
     mavenCentral()
}

dependencies {
    implementation 'io.github.microutils:kotlin-logging:1.7.8'
    implementation 'org.influxdb:influxdb-java:2.15'
    implementation "io.quarkus:quarkus-smallrye-metrics:${quarkusPlatformVersion}"
    implementation "io.quarkus:quarkus-smallrye-health:${quarkusPlatformVersion}"
    implementation "io.quarkus:quarkus-kotlin:${quarkusPlatformVersion}"
    implementation "io.quarkus:quarkus-smallrye-fault-tolerance:${quarkusPlatformVersion}"
    implementation "io.quarkus:quarkus-smallrye-openapi:${quarkusPlatformVersion}"
    implementation "io.quarkus:quarkus-resteasy-jsonb:${quarkusPlatformVersion}"
    implementation "io.quarkus:quarkus-vertx:${quarkusPlatformVersion}"
    implementation "io.quarkus:quarkus-smallrye-opentracing:${quarkusPlatformVersion}"
    // implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation "io.quarkus:quarkus-core:${quarkusPlatformVersion}"
    implementation "io.quarkus:quarkus-resteasy:${quarkusPlatformVersion}"
    implementation "io.quarkus:quarkus-core-deployment:${quarkusPlatformVersion}"
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    testImplementation "io.quarkus:quarkus-junit5:${quarkusPlatformVersion}"
    testImplementation 'io.rest-assured:rest-assured:4.2.0'
    testImplementation 'org.testcontainers:junit-jupiter:1.12.5'
    testImplementation 'org.testcontainers:influxdb:1.12.5'
    testImplementation 'org.assertj:assertj-core:3.15.0'
}

configurations.all {
    exclude group: 'javax.enterprise', module: 'cdi-api'
}

group 'de.flick'
version '1.0.0-SNAPSHOT'

quarkus {
    setOutputDirectory("$projectDir/build/classes/kotlin/main")
}

quarkusDev {
    setSourceDir("$projectDir/src/main/kotlin")
}

allOpen {
    annotation("javax.ws.rs.Path")
    annotation("javax.enterprise.context.ApplicationScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}
